package org.certificateservices.intune.ejbcaconnector

import org.bouncycastle.asn1.ASN1Sequence
import org.bouncycastle.asn1.x509.Extension
import org.bouncycastle.asn1.x509.GeneralName
import org.bouncycastle.pkcs.PKCS10CertificationRequest
import org.bouncycastle.util.encoders.Base64
import spock.lang.Specification

class CertUtilsSpec extends Specification {
    static String PKCS10Request = ""

    def "test getCertificatesFromJKS"(){
        when:
        def certs = CertUtils.getCertificatesFromJKS("src/test/resources/scepreceiver.jks")

        then:
        certs != null
        certs.size() == 3
    }

    def "test methods to get subject alternative name"(){
        when:
        PKCS10CertificationRequest request = CertUtils.getPKCS10CertificationRequestFromFile("src/test/resources/samplerequest.csr")

        Extension sanExtension = CertUtils.getSubjectAlternativeNameExtensionFromCertificateRequest(request)
        String upn = CertUtils.getSubjectAlternativeNameFieldFromExtension(sanExtension, GeneralName.otherName)
        String email =  CertUtils.getSubjectAlternativeNameFieldFromExtension(sanExtension, GeneralName.rfc822Name)

        println "upn = " + upn
        println "email = " + email
        then:
        request != null

    }
}
